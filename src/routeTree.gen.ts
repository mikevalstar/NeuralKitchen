/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TagsRouteImport } from './routes/tags'
import { Route as SearchRouteImport } from './routes/search'
import { Route as QueueRouteImport } from './routes/queue'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as RecipesIndexRouteImport } from './routes/recipes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as HelpIndexRouteImport } from './routes/help/index'
import { Route as RecipesCreateRouteImport } from './routes/recipes/create'
import { Route as HelpHelpFileRouteImport } from './routes/help/$helpFile'
import { Route as RecipesRecipeIdIndexRouteImport } from './routes/recipes/$recipeId/index'
import { Route as ProjectsProjectIdIndexRouteImport } from './routes/projects/$projectId/index'
import { Route as SettingsPromptsPromptKeyRouteImport } from './routes/settings/prompts/$promptKey'
import { Route as RecipesRecipeIdEditRouteImport } from './routes/recipes/$recipeId/edit'
import { Route as ProjectsProjectIdEditRouteImport } from './routes/projects/$projectId/edit'
import { Route as RecipesRecipeIdVersionsIndexRouteImport } from './routes/recipes/$recipeId/versions/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const TagsRoute = TagsRouteImport.update({
  id: '/tags',
  path: '/tags',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const QueueRoute = QueueRouteImport.update({
  id: '/queue',
  path: '/queue',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipesIndexRoute = RecipesIndexRouteImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const HelpIndexRoute = HelpIndexRouteImport.update({
  id: '/help/',
  path: '/help/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipesCreateRoute = RecipesCreateRouteImport.update({
  id: '/recipes/create',
  path: '/recipes/create',
  getParentRoute: () => rootRouteImport,
} as any)
const HelpHelpFileRoute = HelpHelpFileRouteImport.update({
  id: '/help/$helpFile',
  path: '/help/$helpFile',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipesRecipeIdIndexRoute = RecipesRecipeIdIndexRouteImport.update({
  id: '/recipes/$recipeId/',
  path: '/recipes/$recipeId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexRouteImport.update({
  id: '/projects/$projectId/',
  path: '/projects/$projectId/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsPromptsPromptKeyRoute =
  SettingsPromptsPromptKeyRouteImport.update({
    id: '/settings/prompts/$promptKey',
    path: '/settings/prompts/$promptKey',
    getParentRoute: () => rootRouteImport,
  } as any)
const RecipesRecipeIdEditRoute = RecipesRecipeIdEditRouteImport.update({
  id: '/recipes/$recipeId/edit',
  path: '/recipes/$recipeId/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdEditRoute = ProjectsProjectIdEditRouteImport.update({
  id: '/projects/$projectId/edit',
  path: '/projects/$projectId/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipesRecipeIdVersionsIndexRoute =
  RecipesRecipeIdVersionsIndexRouteImport.update({
    id: '/recipes/$recipeId/versions/',
    path: '/recipes/$recipeId/versions/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/queue': typeof QueueRoute
  '/search': typeof SearchRoute
  '/tags': typeof TagsRoute
  '/help/$helpFile': typeof HelpHelpFileRoute
  '/recipes/create': typeof RecipesCreateRoute
  '/help': typeof HelpIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/projects/$projectId/edit': typeof ProjectsProjectIdEditRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/settings/prompts/$promptKey': typeof SettingsPromptsPromptKeyRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
  '/recipes/$recipeId/versions': typeof RecipesRecipeIdVersionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/queue': typeof QueueRoute
  '/search': typeof SearchRoute
  '/tags': typeof TagsRoute
  '/help/$helpFile': typeof HelpHelpFileRoute
  '/recipes/create': typeof RecipesCreateRoute
  '/help': typeof HelpIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/projects/$projectId/edit': typeof ProjectsProjectIdEditRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/settings/prompts/$promptKey': typeof SettingsPromptsPromptKeyRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
  '/recipes/$recipeId/versions': typeof RecipesRecipeIdVersionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/queue': typeof QueueRoute
  '/search': typeof SearchRoute
  '/tags': typeof TagsRoute
  '/help/$helpFile': typeof HelpHelpFileRoute
  '/recipes/create': typeof RecipesCreateRoute
  '/help/': typeof HelpIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/recipes/': typeof RecipesIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/projects/$projectId/edit': typeof ProjectsProjectIdEditRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/settings/prompts/$promptKey': typeof SettingsPromptsPromptKeyRoute
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/recipes/$recipeId/': typeof RecipesRecipeIdIndexRoute
  '/recipes/$recipeId/versions/': typeof RecipesRecipeIdVersionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/queue'
    | '/search'
    | '/tags'
    | '/help/$helpFile'
    | '/recipes/create'
    | '/help'
    | '/projects'
    | '/recipes'
    | '/settings'
    | '/projects/$projectId/edit'
    | '/recipes/$recipeId/edit'
    | '/settings/prompts/$promptKey'
    | '/projects/$projectId'
    | '/recipes/$recipeId'
    | '/recipes/$recipeId/versions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/queue'
    | '/search'
    | '/tags'
    | '/help/$helpFile'
    | '/recipes/create'
    | '/help'
    | '/projects'
    | '/recipes'
    | '/settings'
    | '/projects/$projectId/edit'
    | '/recipes/$recipeId/edit'
    | '/settings/prompts/$promptKey'
    | '/projects/$projectId'
    | '/recipes/$recipeId'
    | '/recipes/$recipeId/versions'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/queue'
    | '/search'
    | '/tags'
    | '/help/$helpFile'
    | '/recipes/create'
    | '/help/'
    | '/projects/'
    | '/recipes/'
    | '/settings/'
    | '/projects/$projectId/edit'
    | '/recipes/$recipeId/edit'
    | '/settings/prompts/$promptKey'
    | '/projects/$projectId/'
    | '/recipes/$recipeId/'
    | '/recipes/$recipeId/versions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  QueueRoute: typeof QueueRoute
  SearchRoute: typeof SearchRoute
  TagsRoute: typeof TagsRoute
  HelpHelpFileRoute: typeof HelpHelpFileRoute
  RecipesCreateRoute: typeof RecipesCreateRoute
  HelpIndexRoute: typeof HelpIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  RecipesIndexRoute: typeof RecipesIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  ProjectsProjectIdEditRoute: typeof ProjectsProjectIdEditRoute
  RecipesRecipeIdEditRoute: typeof RecipesRecipeIdEditRoute
  SettingsPromptsPromptKeyRoute: typeof SettingsPromptsPromptKeyRoute
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  RecipesRecipeIdIndexRoute: typeof RecipesRecipeIdIndexRoute
  RecipesRecipeIdVersionsIndexRoute: typeof RecipesRecipeIdVersionsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tags': {
      id: '/tags'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/queue': {
      id: '/queue'
      path: '/queue'
      fullPath: '/queue'
      preLoaderRoute: typeof QueueRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes/': {
      id: '/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/help/': {
      id: '/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes/create': {
      id: '/recipes/create'
      path: '/recipes/create'
      fullPath: '/recipes/create'
      preLoaderRoute: typeof RecipesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/help/$helpFile': {
      id: '/help/$helpFile'
      path: '/help/$helpFile'
      fullPath: '/help/$helpFile'
      preLoaderRoute: typeof HelpHelpFileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes/$recipeId/': {
      id: '/recipes/$recipeId/'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof RecipesRecipeIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/prompts/$promptKey': {
      id: '/settings/prompts/$promptKey'
      path: '/settings/prompts/$promptKey'
      fullPath: '/settings/prompts/$promptKey'
      preLoaderRoute: typeof SettingsPromptsPromptKeyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes/$recipeId/edit': {
      id: '/recipes/$recipeId/edit'
      path: '/recipes/$recipeId/edit'
      fullPath: '/recipes/$recipeId/edit'
      preLoaderRoute: typeof RecipesRecipeIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/edit': {
      id: '/projects/$projectId/edit'
      path: '/projects/$projectId/edit'
      fullPath: '/projects/$projectId/edit'
      preLoaderRoute: typeof ProjectsProjectIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes/$recipeId/versions/': {
      id: '/recipes/$recipeId/versions/'
      path: '/recipes/$recipeId/versions'
      fullPath: '/recipes/$recipeId/versions'
      preLoaderRoute: typeof RecipesRecipeIdVersionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  QueueRoute: QueueRoute,
  SearchRoute: SearchRoute,
  TagsRoute: TagsRoute,
  HelpHelpFileRoute: HelpHelpFileRoute,
  RecipesCreateRoute: RecipesCreateRoute,
  HelpIndexRoute: HelpIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  RecipesIndexRoute: RecipesIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  ProjectsProjectIdEditRoute: ProjectsProjectIdEditRoute,
  RecipesRecipeIdEditRoute: RecipesRecipeIdEditRoute,
  SettingsPromptsPromptKeyRoute: SettingsPromptsPromptKeyRoute,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  RecipesRecipeIdIndexRoute: RecipesRecipeIdIndexRoute,
  RecipesRecipeIdVersionsIndexRoute: RecipesRecipeIdVersionsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
